{"/home/usuario/DSI-mod-pr8/src/mod/PrimeNumber.ts":{"path":"/home/usuario/DSI-mod-pr8/src/mod/PrimeNumber.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"2":{"start":{"line":10,"column":17},"end":{"line":10,"column":18}},"3":{"start":{"line":11,"column":15},"end":{"line":11,"column":19}},"4":{"start":{"line":12,"column":20},"end":{"line":12,"column":22}},"5":{"start":{"line":13,"column":4},"end":{"line":24,"column":5}},"6":{"start":{"line":14,"column":8},"end":{"line":18,"column":9}},"7":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"8":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"9":{"start":{"line":16,"column":16},"end":{"line":16,"column":29}},"10":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":35}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":17}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":21}},"15":{"start":{"line":27,"column":0},"end":{"line":27,"column":48}},"16":{"start":{"line":37,"column":23},"end":{"line":37,"column":25}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":60}},"18":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"19":{"start":{"line":53,"column":12},"end":{"line":53,"column":63}},"20":{"start":{"line":55,"column":8},"end":{"line":55,"column":39}},"21":{"start":{"line":62,"column":8},"end":{"line":62,"column":37}},"22":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"23":{"start":{"line":70,"column":12},"end":{"line":70,"column":19}},"24":{"start":{"line":72,"column":8},"end":{"line":72,"column":60}},"25":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"26":{"start":{"line":81,"column":12},"end":{"line":81,"column":29}},"27":{"start":{"line":83,"column":8},"end":{"line":83,"column":55}},"28":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"29":{"start":{"line":93,"column":12},"end":{"line":93,"column":29}},"30":{"start":{"line":95,"column":8},"end":{"line":95,"column":98}},"31":{"start":{"line":95,"column":56},"end":{"line":95,"column":96}},"32":{"start":{"line":102,"column":8},"end":{"line":102,"column":46}},"33":{"start":{"line":105,"column":0},"end":{"line":105,"column":34}}},"fnMap":{"0":{"name":"CrearNumerosPrimos","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":27}},"loc":{"start":{"line":9,"column":37},"end":{"line":26,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":25},"end":{"line":45,"column":5}},"line":43},"2":{"name":"(anonymous_2)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":35},"end":{"line":56,"column":5}},"line":51},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":26},"end":{"line":63,"column":5}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":33},"end":{"line":73,"column":5}},"line":68},"5":{"name":"(anonymous_5)","decl":{"start":{"line":79,"column":4},"end":{"line":79,"column":5}},"loc":{"start":{"line":79,"column":38},"end":{"line":84,"column":5}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":46},"end":{"line":96,"column":5}},"line":91},"7":{"name":"(anonymous_7)","decl":{"start":{"line":95,"column":44},"end":{"line":95,"column":45}},"loc":{"start":{"line":95,"column":56},"end":{"line":95,"column":96}},"line":95},"8":{"name":"(anonymous_8)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":24},"end":{"line":103,"column":5}},"line":101}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},{"start":{"line":15,"column":12},"end":{"line":17,"column":13}}],"line":15},"1":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"2":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"3":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"4":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{"line":80,"column":8},"end":{"line":82,"column":9}}],"line":80},"5":{"loc":{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":94,"column":9}},{"start":{"line":92,"column":8},"end":{"line":94,"column":9}}],"line":92},"6":{"loc":{"start":{"line":92,"column":12},"end":{"line":92,"column":133}},"type":"binary-expr","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":24}},{"start":{"line":92,"column":28},"end":{"line":92,"column":40}},{"start":{"line":92,"column":44},"end":{"line":92,"column":63}},{"start":{"line":92,"column":67},"end":{"line":92,"column":133}}],"line":92},"7":{"loc":{"start":{"line":95,"column":56},"end":{"line":95,"column":96}},"type":"binary-expr","locations":[{"start":{"line":95,"column":56},"end":{"line":95,"column":74}},{"start":{"line":95,"column":78},"end":{"line":95,"column":96}}],"line":95}},"s":{"0":1,"1":1,"2":5,"3":5,"4":5,"5":5,"6":201,"7":201,"8":7722,"9":484,"10":201,"11":65,"12":201,"13":201,"14":5,"15":1,"16":1,"17":1,"18":2,"19":1,"20":2,"21":29,"22":3,"23":1,"24":2,"25":2,"26":1,"27":1,"28":4,"29":3,"30":1,"31":25,"32":1,"33":1},"f":{"0":5,"1":1,"2":2,"3":29,"4":3,"5":2,"6":4,"7":25,"8":1},"b":{"0":[484,7238],"1":[65,136],"2":[1,1],"3":[1,2],"4":[1,1],"5":[3,1],"6":[4,3,2,1],"7":[25,24]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI-mod-pr8/src/mod/PrimeNumber.ts","sources":["/home/usuario/DSI-mod-pr8/src/mod/PrimeNumber.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACH,SAAgB,kBAAkB,CAAE,OAAe;IACjD,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,SAAS,GAAc,EAAE,CAAC;IAC9B,OAAO,SAAS,CAAC,MAAM,KAAK,OAAO,EAAE;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/B,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;gBACpB,IAAI,GAAG,KAAK,CAAC;aACd;SACF;QACD,IAAI,IAAI,EAAE;YACR,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACxB;QACD,MAAM,EAAE,CAAC;QACT,IAAI,GAAG,IAAI,CAAC;KACb;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAjBD,gDAiBC;AAED;;;;;;;GAOG;AACH,MAAa,WAAW;IACd,gBAAgB,GAAa,EAAE,CAAC;IAChC,MAAM,CAAC,WAAW,CAAuB;IACjD;;;OAGG;IACH,YAAqB,OAAe;QAClC,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IACD;;;;OAIG;IACI,MAAM,CAAC,cAAc,CAAC,OAAe;QAC1C,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAC5B,WAAW,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;SACpD;QACD,OAAO,WAAW,CAAC,WAAW,CAAC;IACjC,CAAC;IACD;;;OAGG;IACH,mBAAmB;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IACD;;;OAGG;IACH,mBAAmB,CAAC,OAAe;QACjC,IAAG,OAAO,GAAG,CAAC,EAAE;YACd,OAAO;SACR;QACD,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IACD;;;;OAIG;IACH,wBAAwB,CAAC,OAAe;QACtC,IAAI,OAAO,GAAG,CAAC,EAAE;YACf,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IACD;;;;;OAKG;IACH,qBAAqB,CAAE,QAAgB,EAAE,QAAgB;QACvD,IAAI,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YAC7H,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,IAAI,QAAQ,IAAI,MAAM,IAAI,QAAQ,CAAC,CAAC;IAC5F,CAAC;IACD;;;OAGG;IACH,CAAC,MAAM,CAAC,QAAQ,CAAC;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;IACxC,CAAC;CACF;AApED,kCAoEC","sourcesContent":["/**\n * Función que dado un número genera los n primeros números primos\n * @param entrada número de entrada\n * @returns array con los n primeros números primos\n */\nexport function CrearNumerosPrimos (entrada: number) : number[] {\n  let numero = 1;\n  let bool = true;\n  let resultado : number[] = [];\n  while (resultado.length !== entrada) {\n    for (let i = 2; i < numero; i++) {\n      if (numero % i === 0) {\n        bool = false;\n      }\n    }\n    if (bool) {\n      resultado.push(numero);\n    }\n    numero++;\n    bool = true;\n  }\n  return resultado;\n}\n\n/**\n * Clase que almacena números primos\n * @method getPrimeNumber\n * @method getColeccionNumeros\n * @method setColeccionNumeros\n * @method getPrimerosNumerosPrimos\n * @method getNumerosPrimosRango\n */\nexport class PrimeNumber<T> implements Iterable<number>{\n  private coleccionNumeros: number[] = [];\n  private static primeNumber : PrimeNumber<number>;\n  /**\n   * Constructor privado\n   * @param entrada número de entrada\n   */\n  private constructor (entrada: number) {\n    this.coleccionNumeros = CrearNumerosPrimos(entrada);\n  }\n  /**\n   * Método que invoca al constructor\n   * @param entrada número de entrada\n   * @returns instancia de la clase\n   */\n  public static getPrimeNumber(entrada: number): PrimeNumber<number> {\n    if (!PrimeNumber.primeNumber) {\n      PrimeNumber.primeNumber = new PrimeNumber(entrada);\n    }\n    return PrimeNumber.primeNumber;\n  }\n  /**\n   * Getter de la clase\n   * @returns el array con los números primos\n   */\n  getColeccionNumeros() : number[] {\n    return this.coleccionNumeros;\n  }\n  /**\n   * Setter de la clase\n   * @param entrada número de entrada\n   */\n  setColeccionNumeros(entrada: number) {\n    if(entrada < 0) {\n      return;\n    }\n    this.coleccionNumeros = CrearNumerosPrimos(entrada);\n  }\n  /**\n   * Método que retorna los n primeros números primos\n   * @param entrada número de entrada\n   * @returns un array con los n primeros números primos\n   */\n  getPrimerosNumerosPrimos(entrada: number): number[] | undefined {\n    if (entrada < 0) {\n      return undefined;\n    }\n    return this.coleccionNumeros.slice(0, entrada);\n  }\n  /**\n   * Método que retorna los números primos comprendidos entre la entrada1 y la entrada2\n   * @param entrada1 valor inferior de entrada\n   * @param entrada2 valor superior de entrada\n   * @returns un array con los números primos comprendidos entre esas posiciones\n   */\n  getNumerosPrimosRango (entrada1: number, entrada2: number): number[] | undefined {\n    if (entrada1 < 0 || entrada2 < 0 || entrada1 > entrada2 || entrada1 > this.coleccionNumeros[this.coleccionNumeros.length - 1]) {\n      return undefined;\n    }\n    return this.coleccionNumeros.filter((numero) => numero >= entrada1 && numero <= entrada2);\n  }\n  /**\n   * Método que hace que la clase pueda ser iterable\n   * @returns el iterador en la posicion\n   */\n  [Symbol.iterator](): Iterator<number> {\n    return this.coleccionNumeros.values();\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bd321f3b25b2b421d6ad1453e282983f276842a1","contentHash":"44f9030c6992f55524089cb7a81c6e6d9f522d167e8f64c0e04dfa2ac6964e91"}}